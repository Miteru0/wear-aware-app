<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.fhnw.team6</groupId>
    <artifactId>wearAware</artifactId>
    <version>1.0-SNAPSHOT</version>
    <url>https://gitlab.fhnw.ch/ip12-24vt/ip12-24vt_fast_fashion/wearAware</url>

    <properties>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven-shade.version>3.5.0</maven-shade.version>
        <maven-deploy.version>2.7</maven-deploy.version>
        <maven-antrun.version>1.8</maven-antrun.version>
        <maven-javadoc.version>3.6.0</maven-javadoc.version>
        <maven-project-info-reports.version>3.4.1</maven-project-info-reports.version>
        <maven-checkstyle.version>3.3.0</maven-checkstyle.version>
        <maven-site.version>3.9.1</maven-site.version>
        <maven-jxr.version>3.3.1</maven-jxr.version>
        <maven-surefire.version>3.0.0-M5</maven-surefire.version>

        <gson.version>2.10.1</gson.version>
        <junit.version>5.11.0-M2</junit.version>
        <humbleui.version>0.4.18</humbleui.version>
        <skija.version>0.116.4</skija.version>

        <mainClass>ch.fhnw.team6.Main</mainClass>
    </properties>

    <dependencies>
        <!-- Gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>21.0.1</version>
        </dependency>

        <!-- JUnit 5 -->
         <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Shade plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade.version}</version>
				<executions>
					<execution>
						<phase>package</phase>  <!-- Shade for dependencies, runs on package phase :) -->
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom> <!-- Prevents extra POM file -->
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>${mainClass}</mainClass> <!-- Specifies the main class -->
								</transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                    <resource>META-INF/MANIFEST.MF</resource>
                                </transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun.version}</version>
                <executions>
                    <execution>
                        <id>scp</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Deploying to Raspberry Pi" />
                                <scp localFile="${project.basedir}/target/${project.name}-${project.version}.jar" 
                                remoteToFile="pi@pi4j.local:/home/pi/jars/${project.name}.jar"
                                verbose="true" 
                                password="pi4j"
                                trust="true" />

                                <!-- calls deploy script (Don't use it if PI already runs an application)-->
                                <!-- <sshexec host="pi4j.local" trust="yes"
                                username="pi" password="pi4j"
                                command="sh /home/pi/jars/start.sh" /> -->

                                <!-- Make sure directory exists on remote -->
                                <sshexec host="pi4j.local"
                                        username="pi"
                                        password="pi4j"
                                        command="mkdir -p /home/pi/jars/json" />
                                <!-- Copy JSON files -->
                                <scp todir="pi@pi4j.local:/home/pi/jars/json"
                                    password="pi4j"
                                    trust="true"
                                    verbose="true">
                                    <fileset dir="${project.basedir}/src/main/resources/json">
                                        <include name="clothes.json"/>
                                        <include name="questions.json"/>
                                    </fileset>
                                </scp>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <!-- libraries for scp impl      -->
                <!-- antrun doesn't use os's scp -->
                <dependencies>
                    <dependency>
                        <groupId>com.jcraft</groupId>
                        <artifactId>jsch</artifactId>
                        <version>0.1.53</version>
                    </dependency>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-jsch</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                </dependencies>
            </plugin>
            
            <!-- Maven Site Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site.version}</version> 
                <configuration>
                    <outputDirectory>${project.build.directory}/site</outputDirectory>
                </configuration>
            </plugin>

            <!-- ensures that Maven Surefire will recognize and run JUnit 5 tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire.version}</version> <!-- Use the latest version -->
                <configuration>
                    <dependenciesToScan>
                        <dependency>org.junit.jupiter</dependency> <!-- JUnit 5 support -->
                    </dependenciesToScan>
                </configuration>
            </plugin>

            <!-- Checkstyle plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/src/test/resources/configs/checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                    <id>verify</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        
    </build>

    <reporting>
        <plugins>
            <!-- Maven Project Info Reports Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports.version}</version> 
            </plugin>

            <!-- Maven Checkstyle Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/src/test/resources/configs/checkstyle.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>

            <!-- Maven JXR Plugin (for resolving Xref link warnings) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr.version}</version>
            </plugin>
            
        </plugins>
    </reporting>
    

</project>